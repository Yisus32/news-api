stages:
  - backup
  - build
  - deploy
  - rollback

dev_backup_job:
  stage: backup
  script:
    - docker image tag devorders-api:latest devorders-api:prev || true
  tags:
    - devapp
  only :
    - develop


dev_build_job:
  stage: build
  script:
    - cp .env.example .env
    - sed -i -e "s;^\s*SECRET_KEY=.*;SECRET_KEY=$SECRET_KEY;g" .env
    - sed -i -e "s;^\s*DB_CONNECTION=.*;DB_CONNECTION=pgsql;g" .env
    - sed -i -e "s;^\s*DB_DATABASE=.*;DB_DATABASE=devorders;g" .env
    - sed -i -e "s;^\s*DB_USERNAME=.*;DB_USERNAME=devorders;g" .env
    - sed -i -e "s;^\s*DB_PASSWORD=.*;DB_PASSWORD=$DEV_DB_PASS;g" .env
    - sed -i -e "s;^\s*DB_HOST=.*;DB_HOST=192.168.0.10;g" .env
    - sed -i -e "s;^\s*DB_PORT=.*;DB_PORT=5433;g" .env
    - sed -i -e "s;^\s*DEBUG=.*;DEBUG=1;g" .env
    - sed -i -e "s;^\s*APP_URL=.*;APP_URL=devorders.zippyttech.com;g" .env
    - sed -i -e "s;^\s*USERS_API=.*;USERS_API=http://dvus-api/us/;g" .env
    - sed -i -e "s;^\s*CUSTOMERS_API=.*;CUSTOMERS_API=https://devcs.zippyttech.com/cs/;g" .env
    - sed -i -e "s;^\s*PAYMENTS_API=.*;CUSTOMERS_API=http://devpay-api/pay/;g" .env
    - docker build -t devorders-api .
  when: on_success
  tags:
    - devapp
  only :
    - develop

dev_deploy_job:
  stage: deploy
  script:
    - docker stop devorders-api || true
    - docker rm devorders-api || true
    - docker run -d --restart always --name devorders-api -p 10094:80 --network=devapp devorders-api
    - docker exec devorders-api php artisan migrate
  when: on_success
  tags:
    - devapp
  only:
    - develop

dev_rollback_job:
  stage: rollback
  script:
    - docker stop devorders-api || true
    - docker rm devorders-api || true
    - docker image tag devorders-api:prev devorders-api:latest || true
    - docker run -d --restart always --name devorders-api -p 10094:80 --network=devapp devorders-api
  when: manual
  tags:
    - devapp
  only:
    - develop


qa_backup_job:
  stage: backup
  script:
    - docker image tag qaorders-api:latest qaorders-api:prev || true
  tags:
    - qaapp
  only :
    - qa

qa_build_job:
  stage: build
  script:
    - cp .env.example .env
    - sed -i -e "s;^\s*SECRET_KEY=.*;SECRET_KEY=$SECRET_KEY;g" .env
    - sed -i -e "s;^\s*DB_CONNECTION=.*;DB_CONNECTION=pgsql;g" .env
    - sed -i -e "s;^\s*DB_DATABASE=.*;DB_DATABASE=qaorders;g" .env
    - sed -i -e "s;^\s*DB_USERNAME=.*;DB_USERNAME=qaorders;g" .env
    - sed -i -e "s;^\s*DB_PASSWORD=.*;DB_PASSWORD=$QA_DB_PASS;g" .env
    - sed -i -e "s;^\s*DB_HOST=.*;DB_HOST=10.0.0.25;g" .env
    - sed -i -e "s;^\s*DB_PORT=.*;DB_PORT=5432;g" .env
    - sed -i -e "s;^\s*DEBUG=.*;DEBUG=1;g" .env
    - sed -i -e "s;^\s*APP_URL=.*;APP_URL=qaorders.zippyttech.com;g" .env
    - sed -i -e "s;^\s*USERS_API=.*;USERS_API=https://qaus.zippyttech.com/us/;g" .env
    - sed -i -e "s;^\s*CUSTOMERS_API=.*;CUSTOMERS_API=https://qacs.zippyttech.com/cs/;g" .env
    - sed -i -e "s;^\s*PAYMENTS_API=.*;CUSTOMERS_API=https://qapay.zippyttech.com/pay/;g" .env
    - docker build -t qaorders-api .
  when: on_success
  tags:
    - qaapp
  only :
    - qa


qa_deploy_job:
  stage: deploy
  script:
    - docker stop qaorders-api || true
    - docker rm qaorders-api || true
    - docker run -d --restart always --name qaorders-api -p 10094:80 --network=qaapp qaorders-api
    - docker exec qaorders-api php artisan migrate
  when: on_success
  tags:
    - qaapp
  only:
    - qa

qa_rollback_job:
  stage: rollback
  script:
    - docker stop qaorders-api || true
    - docker rm qaorders-api || true
    - docker image tag qaorders-api:prev qaorders-api:latest || true
    - docker run -d --restart always --name qaorders-api -p 10094:80 --network=qaapp qaorders-api
  when: manual
  tags:
    - qaapp
  only:
    - qa

prod_backup_job:
  stage: backup
  script:
    - docker image tag orders-api:latest orders-api:prev || true
  tags:
    - prodapp
  only :
    - master

prod_build_job:
  stage: build
  script:
    - cp .env.example .env
    - sed -i -e "s;^\s*SECRET_KEY=.*;SECRET_KEY=$SECRET_KEY;g" .env
    - sed -i -e "s;^\s*DB_CONNECTION=.*;DB_CONNECTION=pgsql;g" .env
    - sed -i -e "s;^\s*DB_DATABASE=.*;DB_DATABASE=orders;g" .env
    - sed -i -e "s;^\s*DB_USERNAME=.*;DB_USERNAME=orders;g" .env
    - sed -i -e "s;^\s*DB_PASSWORD=.*;DB_PASSWORD=$PROD_DB_PASS;g" .env
    - sed -i -e "s;^\s*DB_HOST=.*;DB_HOST=10.0.0.31;g" .env
    - sed -i -e "s;^\s*DB_PORT=.*;DB_PORT=5432;g" .env
    - sed -i -e "s;^\s*DEBUG=.*;DEBUG=0;g" .env
    - sed -i -e "s;^\s*APP_URL=.*;APP_URL=orders.zippyttech.com;g" .env
    - sed -i -e "s;^\s*USERS_API=.*;USERS_API=https://us.zippyttech.com/us/;g" .env
    - sed -i -e "s;^\s*CUSTOMERS_API=.*;CUSTOMERS_API=https://cs.zippyttech.com/cs/;g" .env
    - sed -i -e "s;^\s*PAYMENTS_API=.*;CUSTOMERS_API=https://pay.zippyttech.com/pay/;g" .env
    - docker build -t orders-api .
  when: on_success
  tags:
    - prodapp
  only :
    - master

prod_deploy_job:
  stage: deploy
  script:
    - docker stop orders-api || true
    - docker rm orders-api || true
    - docker run -d --restart always --name orders-api -p 8075:80 orders-api
    - docker exec orders-api php artisan migrate
  when: on_success
  tags:
    - prodapp
  only:
    - master

prod_rollback_job:
  stage: rollback
  script:
    - docker stop orders-api || true
    - docker rm orders-api || true
    - docker image tag orders-api:prev orders-api:latest || true
    - docker run -d --restart always --name orders-api -p 8075:80 orders-api
  when: manual
  tags:
    - prodapp
  only:
    - master
