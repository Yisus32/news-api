stages:
  - backup
  - build
  - deploy
  - rollback

dev_backup_job:
  stage: backup
  script:
    - docker image tag devrubick2client-api:latest devrubick2client-api:prev || true
  tags:
    - devapp
  only :
    - develop

dev_build_job:
  stage: build
  script:
    - cp .env.example .env
    - sed -i -e "s;^\s*SECRET_KEY=.*;SECRET_KEY=$SECRET_KEY;g" .env
    - sed -i -e "s;^\s*DB_CONNECTION=.*;DB_CONNECTION=pgsql;g" .env
    - sed -i -e "s;^\s*DB_DATABASE=.*;DB_DATABASE=devvia;g" .env
    - sed -i -e "s;^\s*DB_USERNAME=.*;DB_USERNAME=devvia;g" .env
    - sed -i -e "s;^\s*DB_PASSWORD=.*;DB_PASSWORD=$DEV_DB_PASS;g" .env
    - sed -i -e "s;^\s*DB_HOST=.*;DB_HOST=192.168.0.10;g" .env
    - sed -i -e "s;^\s*DB_PORT=.*;DB_PORT=5433;g" .env
    - sed -i -e "s;^\s*DEBUG=.*;DEBUG=1;g" .env
    - sed -i -e "s;^\s*APP_URL=.*;APP_URL=devvia.zippyttech.com;g" .env
    - docker build -t devrubick2client-api .
  when: on_success
  tags:
    - devapp
  only :
    - develop

dev_deploy_job:
  stage: deploy
  script:
    - docker stop devrubick2client-api || true
    - docker rm devrubick2client-api || true
    - docker run -d --restart always --name devrubick2client-api -p 10091:80 devrubick2client-api
    - docker exec devrubick2client-api php artisan migrate
  when: on_success
  tags:
    - devapp
  only:
    - develop

dev_rollback_job:
  stage: rollback
  script:
    - docker stop devrubick2client-api || true
    - docker rm devrubick2client-api || true
    - docker image tag devrubick2client-api:prev devrubick2client-api:latest || true
    - docker run -d --restart always --name devrubick2client-api -p 10091:80 devrubick2client-api
  when: manual
  tags:
    - devapp
  only:
    - develop

qa_backup_job:
  stage: backup
  script:
    - docker image tag qarubick2client-api:latest qarubick2client-api:prev || true
  tags:
    - qaapp
  only :
    - QA

qa_build_job:
  stage: build
  script:
    - cp .env.example .env
    - sed -i -e "s;^\s*SECRET_KEY=.*;SECRET_KEY=$SECRET_KEY;g" .env
    - sed -i -e "s;^\s*DB_CONNECTION=.*;DB_CONNECTION=pgsql;g" .env
    - sed -i -e "s;^\s*DB_DATABASE=.*;DB_DATABASE=qarubick2client;g" .env
    - sed -i -e "s;^\s*DB_USERNAME=.*;DB_USERNAME=qarubick2client;g" .env
    - sed -i -e "s;^\s*DB_PASSWORD=.*;DB_PASSWORD=$QA_DB_PASS;g" .env
    - sed -i -e "s;^\s*DB_HOST=.*;DB_HOST=10.0.0.25;g" .env
    - sed -i -e "s;^\s*DB_PORT=.*;DB_PORT=5432;g" .env
    - sed -i -e "s;^\s*DEBUG=.*;DEBUG=1;g" .env
    - sed -i -e "s;^\s*APP_URL=.*;APP_URL=qareservas.berygo.com;g" .env
    - docker build -t qarubick2client-api .
  when: on_success
  tags:
    - qaapp
  only :
    - QA

qa_deploy_job:
  stage: deploy
  script:
    - docker stop qarubick2client-api || true
    - docker rm qarubick2client-api || true
    - docker run -d --restart always --name qarubick2client-api -p 8103:80 qarubick2client-api
    - docker exec qarubick2client-api php artisan migrate
  when: on_success
  tags:
    - qaapp
  only:
    - QA

qa_rollback_job:
  stage: rollback
  script:
    - docker stop qarubick2client-api || true
    - docker rm qarubick2client-api || true
    - docker image tag qarubick2client-api:prev qarubick2client-api:latest || true
    - docker run -d --restart always --name qarubick2client-api -p 8103:80 qarubick2client-api
  when: manual
  tags:
    - qaapp
  only:
    - QA

prod_backup_job:
  stage: backup
  script:
    - docker image tag rubick2client-api:latest rubick2client-api:prev || true
  tags:
    - prodapp
  only :
    - tags

prod_build_job:
  stage: build
  script:
    - cp .env.example .env
    - sed -i -e "s;^\s*SECRET_KEY=.*;SECRET_KEY=$SECRET_KEY;g" .env
    - sed -i -e "s;^\s*DB_CONNECTION=.*;DB_CONNECTION=pgsql;g" .env
    - sed -i -e "s;^\s*DB_DATABASE=.*;DB_DATABASE=rubick2client;g" .env
    - sed -i -e "s;^\s*DB_USERNAME=.*;DB_USERNAME=rubick2client;g" .env
    - sed -i -e "s;^\s*DB_PASSWORD=.*;DB_PASSWORD=$PROD_DB_PASS;g" .env
    - sed -i -e "s;^\s*DB_HOST=.*;DB_HOST=10.0.0.31;g" .env
    - sed -i -e "s;^\s*DB_PORT=.*;DB_PORT=5432;g" .env
    - sed -i -e "s;^\s*DEBUG=.*;DEBUG=0;g" .env
    - sed -i -e "s;^\s*APP_URL=.*;APP_URL=reservas.berygo.com;g" .env
    - docker build -t rubick2client-api .
  when: on_success
  tags:
    - prodapp
  only :
    - tags

prod_deploy_job:
  stage: deploy
  script:
    - docker stop rubick2client-api || true
    - docker rm rubick2client-api || true
    - docker run -d --restart always --name rubick2client-api -p 9009:80 rubick2client-api
    - docker exec rubick2client-api php artisan migrate
  when: on_success
  tags:
    - prodapp
  only:
    - tags

prod_rollback_job:
  stage: rollback
  script:
    - docker stop rubick2client-api || true
    - docker rm rubick2client-api || true
    - docker image tag rubick2client-api:prev rubick2client-api:latest || true
    - docker run -d --restart always --name rubick2client-api -p 9009:80 rubick2client-api
  when: manual
  tags:
    - prodapp
  only:
    - tags
